<?xml version="1.0" encoding="UTF-8"?>
<!-- 

* Update ERDDAP version number below in ...
   <version>2.23-SNAPSHOT</version>

* Update the version numbers starting with <plugins> section.
  Website to search for maven plugins and dependencies: https://mvnrepository.com/ 

* Compile in Maven and gather dependency .jar files
  (pom.xml based on Kyle's pom from https://github.com/axiom-data-science/erddap )

  From DOS command line (or Bash) (after synchToMaven.sh has copied source files to Maven dir):
      //mvn -help 
      //add -e for full error messages
      //add -X for debug messages
      cd \programs\mavenERDDAP\ERDDAP  
      set "JAVA_HOME=C:\programs\jdk-17.0.3+7"      
      mvn clean               //removes previously generated .class files and ...
      mvn compile             //uses javac.  Identifies missing dependencies/.jars.  
      mvn dependency:analyze  //Identifies excess or missing dependencies/.jars.
                              //  Expected: 
                              //    WARNINGS for postgresql.jar and Cassandra dependencies:
                              //      slf4j, guava, lz4, metrics, netty, snappy, aws-crt.
      mvn package             //Creates a war in \programs\mavenERDDAP\ERDDAP\target
      (then copy netcdfAll-x.x.x.jar into /lib)

   or: mvn clean install -U   //clears out cached information (more thoroughly than 'clean') and does it all?

* Run TestAll.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>gov.noaa.pfel.erddap</groupId>
    <artifactId>ERDDAP</artifactId>
    <version>2.23-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>erddap</name>
    <url>https://coastwatch.pfeg.noaa.gov/erddap/index.html</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <erddapcontent.download.version>v2.23</erddapcontent.download.version>
        <erddapreffiles.download.version>1.0.0</erddapreffiles.download.version>
    </properties>

    <repositories>
        <!-- Use this if you switch away from netcdfAll.jar to modules - or just to get Zarr module.
             Published advice: https://docs.unidata.ucar.edu/netcdf-java/current/userguide/using_netcdf_java_artifacts.html
             Repository https://artifacts.unidata.ucar.edu/repository/unidata-all/      (on web page)
                or      https://artifacts.unidata.ucar.edu/repository/unidata-releases/ (privately)
              Browse either https://artifacts.unidata.ucar.edu/#browse/browse
             -->
        <repository>
            <id>unidata-all</id>   
            <name>UNIDATA All</name>
            <url>https://artifacts.unidata.ucar.edu/repository/unidata-all/</url>
        </repository>
    </repositories>

    <build>
        <sourceDirectory>WEB-INF/classes</sourceDirectory>
        <resources>
            <resource>
                <directory>WEB-INF/classes</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>WEB-INF/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>WEB-INF/lib</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>

                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <failOnError>true</failOnError>
                    <source>17</source>   <!-- java version -->
                    <target>17</target>
                    <excludes>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/LandMask.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/MapGraph.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/MapProj.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/GSHHSNewOnHold.java_NOT_YET</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/Grd.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/GridDataSetCWOpendap.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/GridDataSetPathfinder.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/WriteShapefile.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/pointdata/DigirIobisTDSP.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/pointdata/DigirObisTDSP.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/hdf/HdfWriter.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/HelloWorld.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromBinaryFile.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromMatFiles.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableCopyPost.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromBMDE.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromMWFS.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromNOS.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromNcSequenceFiles.javaNOT_FINISHED</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromNWISDV.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromPostDatabase.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromPostNcFiles.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/util/FileVisitorDNLS.javaOLD</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <warSourceDirectory>${project.basedir}</warSourceDirectory>
                    <warSourceExcludes>WEB-INF/lib/**, target/**, data/**, content/**, .settings/**, *.*</warSourceExcludes>
                </configuration>
            </plugin>

            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                <execution>
                        <?m2e execute onConfiguration?>
                        <id>make-lib</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.basedir}/WEB-INF/lib"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <?m2e execute onConfiguration,onIncremental?>
                        <id>download-netcdf</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <get src="https://downloads.unidata.ucar.edu/netcdf-java/5.5.3/netcdfAll-5.5.3.jar" dest="${project.basedir}/WEB-INF/lib/netcdfAll-5.5.3.jar" skipexisting="true" verbose="true"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <?m2e execute onConfiguration?>
                        <id>make-download-cache-dir</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.basedir}/download_cache"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <?m2e execute onConfiguration?>
                        <id>download-erddap-content</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <get src="https://github.com/ERDDAP/erddap/releases/download/${erddapcontent.download.version}/erddapContent.zip" dest="${project.basedir}/download_cache/erddapContent.zip" skipexisting="true" verbose="true"/>
                                <unzip src="${project.basedir}/download_cache/erddapContent.zip" dest="${project.basedir}" overwrite="false" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <?m2e execute onConfiguration?>
                        <id>download-etopo</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                            <get src="https://github.com/ERDDAP/ERDDAPRefFiles/releases/download/${erddapreffiles.download.version}/etopo1_ice_g_i2.zip" dest="${project.basedir}/download_cache/etopo1_ice_g_i2.zip" skipexisting="true" verbose="true"/>
                                <unzip src="${project.basedir}/download_cache/etopo1_ice_g_i2.zip" dest="${project.basedir}/WEB-INF/ref/" overwrite="false" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <?m2e execute onConfiguration?>
                        <id>download-ref-files</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                            <get src="https://github.com/ERDDAP/ERDDAPRefFiles/releases/download/${erddapreffiles.download.version}/ref_files.zip" dest="${project.basedir}/download_cache/ref_files.zip" skipexisting="true" verbose="true"/>
                                <unzip src="${project.basedir}/download_cache/ref_files.zip" dest="${project.basedir}/WEB-INF/ref/" overwrite="false" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <excludedGroups>AWS, LocalERDDAP, Password, Thredds, ExternalERDDAP, MissingFile, LargeFile, ExternalOther, IncompleteTest, WebInfStructureDependency</excludedGroups>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
          <plugins>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <!-- https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils -->
                <plugin>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-utils</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>

            <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/bom 
                 Parent for reading/writing to AWS S3. -->
            <dependency>
              <groupId>software.amazon.awssdk</groupId>
              <artifactId>bom</artifactId>
              <version>2.20.22</version> <!-- and same number several places below -->
              <type>pom</type>
              <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.10.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api  -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
            <!-- Tomcat8 needed this. Tomcat10 doesn't allow it.
            <configuration>
                <port>8081</port>
                <path>/erddap</path>
            </configuration -->
        </dependency> 

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Kyle had this: 
             https://mvnrepository.com/artifact/org.apache.ant/ant 
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.10.9</version>
        </dependency>   -->


        <!-- https://mvnrepository.com/artifact/gnu-regexp/gnu-regexp
             This is needed for dods.dap code I wasn't compiling but Maven does.  
             'provided' lets it compile here but then doesn't include the .jar in /lib in .war.
             -->
        <dependency>
            <groupId>gnu-regexp</groupId>
            <artifactId>gnu-regexp</artifactId>
            <version>1.1.4</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/gnu.getopt/java-getopt
             This is needed for dods.dap code I wasn't compiling but Maven does.  
             'provided' lets it compile here but then doesn't include the .jar in /lib in .war.
              -->
        <dependency>
            <groupId>gnu.getopt</groupId>
            <artifactId>java-getopt</artifactId>
            <version>1.0.13</version>
            <scope>provided</scope>
        </dependency> 

        <!-- https://mvnrepository.com/artifact/com.lowagie/itext 
             This is the pdf writer.
             Newer version is available, but license now gpl! So stick to 1.3.1
             -->
        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>1.3.1</version>
        </dependency>

        <!-- Kyle had this: 
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
            <version>1.6.3</version>
        </dependency-->

        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core 
             The Lucene search option uses this. 
             2021-12-16 WARNING: Lucene 9.0.0 is available but requires Java 11(?). -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>9.5.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-queryparser 
             The Lucene search option uses this. -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>9.5.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.json/json 
             This is the JSON reader. -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20230227</version>
        </dependency>

        <!-- I have private copy of source code in with my code.
             2020-12-21 I tried to remove my copy and use this, but failed.
             https://mvnrepository.com/artifact/org.jdom/jdom 
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>2.0.2</version>
        </dependency-->

        <!-- Kyle had this: 
        <dependency>
            <groupId>org.apache.axis</groupId>
            <artifactId>axis</artifactId>
            <version>1.4</version>
        </dependency-->

        <!-- Kyle had this: 
        <dependency>
            <groupId>atg.taglib.json</groupId>
            <artifactId>json-taglib</artifactId>
            <version>0.4.1</version>
        </dependency-->

        <!-- https://mvnrepository.com/artifact/com.sun.mail/jakarta.mail 
             Used to send emails. -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!-- versions: https://mvnrepository.com/artifact/commons-codec/commons-codec
             dependency:analyze says it's needed if using netcdf modules
             but it's in netcdfAll.jar - ->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.15</version>
        </dependency> -->

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress 
             File2 and EDDTableFromNcFiles use this. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.22</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging
             dependency:analyze says it's needed if using netcdf modules
             but it's in netcdfAll.jar 
             Maven says 1.2's dependencies have 4 vulnerabilities, but all are old log4j vulnerabilities,
               so ERDDAP admins shouldn't use old log4j (or any log4j). - ->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency> -->

        <!-- https://mvnrepository.com/artifact/jaxen/jaxen 
             org.jdom.xpath code uses this. -->
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>2.0.0</version>
        </dependency>

        <!-- To use downloaded local netcdf-all:
            download from https://downloads.unidata.ucar.edu/netcdf-java/
            or e.g., repo/edu/ucar/netcdfAll/5.5.3/netcdfAll-5.5.3.jar 
            [This approach is based on second answer from 
             https://stackoverflow.com/questions/3765903/how-to-include-local-jar-files-in-maven-project ]
         -->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>netcdfAll</artifactId>
            <version>5.5.3</version>  <!-- version number duplicated several times below -->
        </dependency>

        <!-- These will be needed if I ever switch away from netcdfAll.
          Published advice https://docs.unidata.ucar.edu/netcdf-java/current/userguide/using_netcdf_java_artifacts.html 
            and Jan 24, 2022 email from Jennifer Oxelson Ganter
            and a set of runtime modules from https://docs.unidata.ucar.edu/netcdf-java/current/userguide/file_types.html 
          To figure out which module has a given class, Google, e.g.: github netcdf-java ucar nc2 geotiff GeotiffWriter 

          Browse repository (probably unidata-all): https://artifacts.unidata.ucar.edu/#browse/browse
          -->

        <!-- Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fbufr - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>bufr</artifactId>
            <version>5.5.3</version>  <!- - this number duplicated many times below - ->
            <scope>runtime</scope>  
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fcdm-core  
             Fundamental! 
             Has ucar.nc2.Variable and Variable.Builder (and other builders).
             Has ucar.nc2.ncml.NcmlReader, Aggregation, AggregationExisting, AggregationFmrc, AggregationOuterDimension, 
               AggregationUnion, etc- ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-core</artifactId>
            <version>5.5.3</version>
            <scope>compile</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fcdm-image  - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-image</artifactId>
            <version>5.5.3</version>
            <scope>runtime</scope>
        </dependency>
       <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fcdm-mcidas  - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-mcidas</artifactId>
            <version>5.5.3</version>
            <scope>runtime</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fcdm-misc  
             Has ucar.nc2.geotiff. - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-misc</artifactId> 
            <version>5.5.3</version>
            <scope>compile</scope>  
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fcdm-radial  
             probably not needed- ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-radial</artifactId>
            <version>5.5.3</version>
            <scope>runtime</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fcdm-vis5d  - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-vis5d</artifactId>
            <version>5.5.3</version>
            <scope>runtime</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fcdm-zarr  
             zarr isn't included in netcdfAll 
             BUG in 5.5.3 detected at EDDGridFromNcFiles.testNcml(EDDGridFromNcFiles.java:5529)
               so I can't include zarr module v5.5.3 with distribution - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-zarr</artifactId>
            <version>5.5.3</version>
            <scope>runtime</scope>
        </dependency> 
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fclcommon 
             Referenced in Jennifer's email. Has ucar.nc2.dt.image... and some ucar.nc2.iosp... 
             But I distrust artifacts with version=5.1.0. - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>clcommon</artifactId>
            <version>5.1.0</version>
            <scope>compile</scope>
        </dependency> - ->
        <!- - d4* is probably dap4: not needed - ->        
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fgrib  - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>grib</artifactId>
            <version>5.5.3</version>
            <scope>runtime</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fhttpservices  - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>httpservices</artifactId>
            <version>5.5.3</version>
            <scope>compile</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Flegacy  - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>legacy</artifactId>
            <version>5.5.3</version>
            <scope>compile</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fnetcdf  doesn't have 5.x - ->
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fnetcdf-java  doesn't have 5.5.3+ - ->
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fnetcdf4 
             This is for writing netcdf4 files with linked C library. - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>netcdf4</artifactId>
            <version>5.5.3</version>
            <scope>runtime</scope>
        </dependency> 
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fopendap  - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>opendap</artifactId>
            <version>5.5.3</version>
            <scope>compile</scope>
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fucar%2Fudunits 
             Marked as needed by dependency:analyze - ->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>udunits</artifactId>
            <version>5.5.3</version>
            <scope>compile</scope> 
        </dependency>
        <!- - Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fwisc%2Fssec%2Fvisad  
             Marked as needed by dependency:analyze - ->
        <dependency>
            <groupId>edu.wisc.ssec</groupId>
            <artifactId>visad</artifactId>
            <version>2.0-20191209</version>
            <scope>runtime</scope>
        </dependency>


        <!- - https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
             It's in netcdf-all.jar  
             and something else gets slf4j-api-...jar - ->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.36</version>
            <scope>runtime</scope>
        </dependency>
        -->

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-jexl3 
             This is the expression parser/processor used by EDDTableFromFiles Derived Variables. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-jexl3</artifactId>
            <version>3.2.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql 
             Postgresql users use this. I include for their convenience. -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.5.4</version>
        </dependency>



        <!-- CASSANDRA 
             https://mvnrepository.com/artifact/com.datastax.cassandra/cassandra-driver-core 
             Cassandra uses this. 
             Be careful. Newer versions may cause trouble with current, older version of Cassandra (which ONC uses). -->
        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>3.11.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava 
             Cassandra driver uses this. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.jpountz.lz4/lz4 
             Cassandra uses this. C* still refers to this older version from older domain. -->
        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>1.3.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-core 
             Cassandra uses this.  -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>4.2.17</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.netty/netty-all 
             Cassandra uses this. -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.89.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.xerial.snappy/snappy-java 
             Cassandra uses this. -->
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>1.1.10.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-jmx 
            2021-01-25 Tried: To deal with java.lang.NoClassDefFoundError: com/codahale/metrics/JmxReporter
            But now "metrics" option is always set to false.
            See EDDTableFromCassandra references to JmxReporter.
            See https://docs.datastax.com/en/developer/java-driver/3.5/manual/metrics/#metrics-4-compatibility            
            and need for Cluster.builder().withoutJMXReporting()
            which is probably a workable solution.           
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jmx</artifactId>
            <version>4.2.12</version>
        </dependency -->


        <!-- AWS
             https://mvnrepository.com/artifact/software.amazon.awssdk/s3 
             This is the core AWS SDK code. 
             See awssdk/bom in <dependencyManagement> section above. -->
        <dependency>
          <groupId>software.amazon.awssdk</groupId>
          <artifactId>s3</artifactId>
          <version>2.20.22</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/regions 
            This is the AWS code for Regions. -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>regions</artifactId>
            <version>2.20.22</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/s3-transfer-manager
            This is the AWS code for TransferManager. -->      
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3-transfer-manager</artifactId>
            <version>2.20.22</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk.crt/aws-crt
            Maven compiling and dependency checking don't catch s3-transfer-manager's requirement for this.
            (Bob says: This modern fancy programming sucks. 
            Back in my day, if it compiled, all needed classes were present.) -->      
        <dependency>
            <groupId>software.amazon.awssdk.crt</groupId>
            <artifactId>aws-crt</artifactId>
            <version>0.21.12</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.google.cloud/google-cloud-translate -->
        <!-- Added by Qi for translation purpose -->
        <!-- WARNING:
             2022-02-07 2.1.10 caused a timeout error. Revert to 2.1.7 again.
             2021-12-22 2.1.8 caused:   Exception in thread "grpc-default-executor-0" java.lang.NoSuchMethodError: 
             com.google.protobuf.GeneratedMessageV3.isStringEmpty(Ljava/lang/Object;)Z
             so revert to 2.1.7 for now -->
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-translate</artifactId>
            <version>2.12.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.api.grpc/proto-google-cloud-translate-v3 -->
        <!-- Added by Bob for translation project -->
        <dependency>
            <groupId>com.google.api.grpc</groupId>
            <artifactId>proto-google-cloud-translate-v3</artifactId>
            <version>2.12.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.auth/google-auth-library-oauth2-http -->
        <dependency>
            <groupId>com.google.auth</groupId>
            <artifactId>google-auth-library-oauth2-http</artifactId>
            <version>1.16.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.api/gax -->
        <dependency>
            <groupId>com.google.api</groupId>
            <artifactId>gax</artifactId>
            <version>2.23.2</version>
        </dependency>

    </dependencies>
</project>
