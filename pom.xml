<?xml version="1.0" encoding="UTF-8"?>
<!-- 

* Update ERDDAP version number below in ...
   <version>2.24-SNAPSHOT</version>

* Update the version numbers starting with <plugins> section.
  Website to search for maven plugins and dependencies: https://mvnrepository.com/ 

* Compile in Maven and gather dependency .jar files
  (pom.xml based on Kyle's pom from https://github.com/axiom-data-science/erddap )

  From DOS command line (or Bash) (after synchToMaven.sh has copied source files to Maven dir):
      //mvn -help 
      //add -e for full error messages
      //add -X for debug messages
      cd \programs\mavenERDDAP\ERDDAP  
      set "JAVA_HOME=C:\programs\jdk-17.0.3+7"      
      mvn clean               //removes previously generated .class files and ...
      mvn compile             //uses javac.  Identifies missing dependencies/.jars.  
      mvn dependency:analyze  //Identifies excess or missing dependencies/.jars.
                              //  Expected: 
                              //    WARNINGS for postgresql.jar and Cassandra dependencies:
                              //      slf4j, guava, lz4, metrics, netty, snappy, aws-crt.
      mvn package             //Creates a war in \programs\mavenERDDAP\ERDDAP\target

   or: mvn clean install -U   //clears out cached information (more thoroughly than 'clean') and does it all?

* Run TestAll.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>gov.noaa.pfel.erddap</groupId>
    <artifactId>ERDDAP</artifactId>
    <version>2.26</version>
    <packaging>war</packaging>

    <name>erddap</name>
    <url>https://coastwatch.pfeg.noaa.gov/erddap/index.html</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <erddapcontent.download.version>content1.0.0</erddapcontent.download.version>
        <erddapreffiles.download.version>1.0.0</erddapreffiles.download.version>
        <netcdfJavaVersion>5.8.0</netcdfJavaVersion>
        <test.resources.version>test1.04</test.resources.version>
        <jettyVersion>12.0.21</jettyVersion>
        <error-prone.version>2.27.0</error-prone.version>
        <prometheusVersion>1.3.7</prometheusVersion>
        <parquetVersion>1.15.2</parquetVersion>
        <awssdkVersion>2.31.43</awssdkVersion>
        <luceneVersion>10.2.1</luceneVersion>
        <mavenTestPluginVersion>3.5.3</mavenTestPluginVersion>
        <jacocoMavenVersion>0.8.13</jacocoMavenVersion>
        <download.unpackWhenChanged>true</download.unpackWhenChanged>
    </properties>

    <repositories>
        <!-- Use this if you switch away from netcdfAll.jar to modules - or just to get Zarr module.
             Published advice: https://docs.unidata.ucar.edu/netcdf-java/current/userguide/using_netcdf_java_artifacts.html
             Repository https://artifacts.unidata.ucar.edu/repository/unidata-all/      (on web page)
                or      https://artifacts.unidata.ucar.edu/repository/unidata-releases/ (privately)
              Browse either https://artifacts.unidata.ucar.edu/#browse/browse
             -->
        <repository>
            <id>unidata-all</id>   
            <name>UNIDATA All</name>
            <url>https://artifacts.unidata.ucar.edu/repository/unidata-all/</url>
        </repository>
    </repositories>

    <build>
        <sourceDirectory>WEB-INF/classes</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <?m2e execute onConfiguration?>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>WEB-INF/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.18.0</version>
                <configuration>
                    <!-- some location that makes sense for your company/project -->
                    <rulesUri>file:///${project.basedir}/versionrules.xml</rulesUri>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>WEB-INF/lib</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <failOnError>true</failOnError>
                    <source>21</source>   <!-- java version -->
                    <target>21</target>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>-Xplugin:ErrorProne -Xep:StringCaseLocaleUsage:OFF -Xep:EmptyCatch:OFF -Xep:StringSplitter:OFF -Xep:JavaLangClash:OFF -Xep:CatchAndPrintStackTrace:OFF -Xep:NotJavadoc:OFF -Xep:InvalidBlockTag:OFF -Xep:MissingSummary:OFF -Xep:EmptyBlockTag:OFF -Xep:InvalidParam:OFF -Xep:InvalidThrows:OFF -Xep:ReturnFromVoid:OFF</arg>
                    </compilerArgs>
                    <excludes>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/LandMask.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/MapGraph.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/MapProj.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/sgt/GSHHSNewOnHold.java_NOT_YET</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/Grd.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/GridDataSetCWOpendap.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/GridDataSetPathfinder.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/griddata/WriteShapefile.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/pointdata/DigirIobisTDSP.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/pointdata/DigirObisTDSP.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/hdf/HdfWriter.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/HelloWorld.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromBinaryFile.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromMatFiles.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableCopyPost.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromBMDE.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromMWFS.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromNOS.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromNcSequenceFiles.javaNOT_FINISHED</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromNWISDV.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromPostDatabase.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/erddap/dataset/EDDTableFromPostNcFiles.javaINACTIVE</exclude>
                        <exclude>gov/noaa/pfel/coastwatch/util/FileVisitorDNLS.javaOLD</exclude>
                    </excludes>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${error-prone.version}</version>
                        </path>
                        <!-- Other annotation processors go here.

                        If 'annotationProcessorPaths' is set, processors will no longer be
                        discovered on the regular -classpath; see also 'Using Error Prone
                        together with other annotation processors' below. -->
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.3</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>no-test-data-in-src-test-resources</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireFilesDontExist>
                                    <message>Test data directories should be removed from src/test/resources</message>
                                    <files>
                                        <file>${project.basedir}/src/test/resources/data</file>
                                        <file>${project.basedir}/src/test/resources/largeFiles</file>
                                        <file>${project.basedir}/src/test/resources/largePoints</file>
                                        <file>${project.basedir}/src/test/resources/largeSatellite</file>
                                    </files>
                                </requireFilesDontExist>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <attachClasses>true</attachClasses>
                    <warSourceDirectory>${project.basedir}</warSourceDirectory>
                    <warSourceExcludes>**/*.java, **/*.javaINACTIVE, **/*.javaInactive, **/*.java_NOT_YET, **/*.javaNOT_FINISHED, **/*.javaOLD, content/**, data/**, development/**, test-data/**, /src/test/**, target/**, src/**, WEB-INF/classes/gov/noaa/pfel/coastwatch/log.*, WEB-INF/lib/**, WEB-INF/NetCheck.*, WEB-INF/*.web.xml, WEB-INF/DoubleCenterGrids.sh, WEB-INF/FileVisitorDNLS.sh, WEB-INF/FindDuplicateTime.*, WEB-INF/GenerateO*, WEB-INF/GenerateT*, WEB-INF/GridSaveAs*, WEB-INF/incompleteMainCatalog.xml, WEB-INF/iobis.m, WEB-INF/obis.m, WEB-INF/MapViewer.*, WEB-INF/QN2005193*, WEB-INF/ValidateDataSetProperties*, WEB-INF/fonts/**, WEB-INF/temp/**, WEB-INF/ref/*.zip, *.*, translation/**, .mvn/**, .settings/**, .github/**, .vscode/**</warSourceExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-maven-plugin -->
            <plugin>
                <groupId>org.eclipse.jetty.ee10</groupId>
                <artifactId>jetty-ee10-maven-plugin</artifactId>
                <version>${jettyVersion}</version>
                <configuration>
                    <webApp>
                        <contextPath>/erddap</contextPath>
                        <descriptor>${project.basedir}/WEB-INF/web.xml</descriptor>
                    </webApp>
                    <!-- necessary to override the default classesDirectory ${project.basedir}/target/classes due to:
                    https://github.com/ERDDAP/erddap/blob/33e6e531484b0cc6ed461f0640b1f0ad3b83e45b/WEB-INF/classes/com/cohort/util/File2.java#L216-->
                    <classesDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</classesDirectory>
                    <scan>0</scan>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- create data directory for testing -->
                    <execution>
                        <?m2e execute onConfiguration?>
                        <id>make-data-dir</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.basedir}/target/data"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.13.0</version>
                <executions>
                    <execution>
                        <id>download-content</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/ERDDAP/erddapContent/releases/download/${erddapcontent.download.version}/erddapContent.zip</url>
                            <unpackWhenChanged>${download.unpackWhenChanged}</unpackWhenChanged>
                            <outputDirectory>${project.basedir}</outputDirectory>
                            <skip>${skipResourceDownload}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-etopo</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/ERDDAP/ERDDAPRefFiles/releases/download/${erddapreffiles.download.version}/etopo1_ice_g_i2.zip</url>
                            <unpackWhenChanged>${download.unpackWhenChanged}</unpackWhenChanged>
                            <outputDirectory>${project.basedir}/WEB-INF/ref/</outputDirectory>
                            <skip>${skipResourceDownload}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-ref</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/ERDDAP/ERDDAPRefFiles/releases/download/${erddapreffiles.download.version}/ref_files.zip</url>
                            <unpackWhenChanged>${download.unpackWhenChanged}</unpackWhenChanged>
                            <outputDirectory>${project.basedir}/WEB-INF/ref/</outputDirectory>
                            <skip>${skipResourceDownload}</skip>
                        </configuration>
                    </execution>

                    <execution>
                        <id>download-test-resources-data</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/ERDDAP/erddapTest/releases/download/${test.resources.version}/data.zip</url>
                            <unpackWhenChanged>${download.unpackWhenChanged}</unpackWhenChanged>
                            <outputDirectory>${project.basedir}/test-data</outputDirectory>
                            <skip>${skipTestResourceDownload}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-test-resources-largeFiles</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/ERDDAP/erddapTest/releases/download/${test.resources.version}/largeFiles.zip</url>
                            <unpackWhenChanged>${download.unpackWhenChanged}</unpackWhenChanged>
                            <outputDirectory>${project.basedir}/test-data</outputDirectory>
                            <skip>${skipTestResourceDownload}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-test-resources-largePoints</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/ERDDAP/erddapTest/releases/download/${test.resources.version}/largePoints.zip</url>
                            <unpackWhenChanged>${download.unpackWhenChanged}</unpackWhenChanged>
                            <outputDirectory>${project.basedir}/test-data</outputDirectory>
                            <skip>${skipTestResourceDownload}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-test-resources-largeSatellite</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/ERDDAP/erddapTest/releases/download/${test.resources.version}/largeSatellite.zip</url>
                            <unpackWhenChanged>${download.unpackWhenChanged}</unpackWhenChanged>
                            <outputDirectory>${project.basedir}/test-data</outputDirectory>
                            <skip>${skipTestResourceDownload}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${mavenTestPluginVersion}</version>
                <configuration>
                    <argLine>${surefire.jacoco.args}</argLine>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.basedir}/test-data</additionalClasspathElement>
                    </additionalClasspathElements>
                    <excludedGroups>Jetty, Slow, LargeFiles, Flaky, AWS, LocalERDDAP, Password, Thredds, ExternalERDDAP, MissingFile, ExternalOther, IncompleteTest, RequiresContent, MissingDataset</excludedGroups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${mavenTestPluginVersion}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>${failsafe.jacoco.args}</argLine>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${project.basedir}/test-data</additionalClasspathElement>
                            </additionalClasspathElements>
                            <groups>Jetty, Slow</groups>
                            <excludedGroups>LargeFiles, Flaky, AWS, LocalERDDAP, Password, Thredds, ExternalERDDAP, MissingFile, ExternalOther, IncompleteTest, RequiresContent, MissingDataset</excludedGroups>
                            <includes>
                                <include>**/IT*.java</include>
                                <include>**/*IT.java</include>
                                <include>**/*ITCase.java</include>
                                <include>**/*Test*.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.9.3.0</version>
                <configuration>
                    <effort>max</effort>
                    <maxHeap>2048</maxHeap>
                    <includeFilterFile>spotbugs-security-include.xml</includeFilterFile>
                </configuration>
            </plugin>
            <!-- <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.8.6.5</version>
                <configuration>
                    <maxHeap>2048</maxHeap>
                     <includeFilterFile>spotbugs-security-include.xml</includeFilterFile> -->
                    <!-- <excludeFilterFile>spotbugs-security-exclude.xml</excludeFilterFile> -->
                    <!-- <plugins> -->
                        <!-- <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>1.13.0</version>
                        </plugin> -->
                        <!-- <plugin>
                            <groupId>com.mebigfatguy.fb-contrib</groupId>
                            <artifactId>fb-contrib</artifactId>
                            <version>7.6.8</version>
                        </plugin> -->
                    <!-- </plugins>
                </configuration>
            </plugin> -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacocoMavenVersion}</version>
                <executions>
                    <execution>
                    <id>before-unit-test-execution</id>
                    <goals>
                    <goal>prepare-agent</goal>
                    </goals>
                    <configuration>
                    <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
                    <propertyName>surefire.jacoco.args</propertyName>
                    </configuration>
                </execution>
                <execution>
                    <id>after-unit-test-execution</id>
                    <phase>test</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                    <configuration>
                        <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
                    </configuration>
                    </execution>
                    <execution>
                    <id>before-integration-test-execution</id>
                    <phase>pre-integration-test</phase>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                    <configuration>
                        <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
                        <propertyName>failsafe.jacoco.args</propertyName>
                    </configuration>
                    </execution>
                    <execution>
                    <id>after-integration-test-execution</id>
                    <phase>post-integration-test</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                    <configuration>
                        <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory>
                    </configuration>
                    </execution>
                    <execution>
                    <id>merge-unit-and-integration</id>
                    <phase>post-integration-test</phase>
                    <goals>
                        <goal>merge</goal>
                    </goals>
                    <configuration>
                        <fileSets>
                        <fileSet>
                            <directory>${project.build.directory}/jacoco-output/</directory>
                            <includes>
                            <include>*.exec</include>
                            </includes>
                        </fileSet>
                        </fileSets>
                        <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                    </configuration>
                    </execution>
                    <execution>
                    <id>create-merged-report</id>
                    <phase>post-integration-test</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                    <configuration>
                        <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory>
                    </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.cosium.code</groupId>
                <artifactId>git-code-format-maven-plugin</artifactId>
                <version>5.3</version>
                <executions>
                    <!-- On commit, format the modified files -->
                    <execution>
                        <?m2e execute onConfiguration?>
                        <id>install-formatter-hook</id>
                        <goals>
                            <goal>install-hooks</goal>
                        </goals>
                    </execution>
                    <!-- On Maven verify phase, fail if any file
                    (including unmodified) is badly formatted -->
                    <execution>
                        <id>validate-code-format</id>
                        <goals>
                            <goal>validate-code-format</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!-- Enable https://github.com/google/google-java-format -->
                    <dependency>
                    <groupId>com.cosium.code</groupId>
                    <artifactId>google-java-format</artifactId>
                    <version>5.3</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <formatterOptions>
                        <!-- Use AOSP style instead of Google Style (4-space indentation). -->
                        <googleJavaFormat.aosp>false</googleJavaFormat.aosp>
                        <!-- Format the javadoc -->
                        <googleJavaFormat.formatJavadoc>true</googleJavaFormat.formatJavadoc>
                        <!-- Fix import order and remove any unused imports, but do no other formatting. -->
                        <googleJavaFormat.fixImportsOnly>false</googleJavaFormat.fixImportsOnly>
                        <!-- Do not fix the import order. Unused imports will still be removed. -->
                        <googleJavaFormat.skipSortingImports>false</googleJavaFormat.skipSortingImports>
                        <!-- Do not remove unused imports. Imports will still be sorted. -->
                        <googleJavaFormat.skipRemovingUnusedImports>false</googleJavaFormat.skipRemovingUnusedImports>
                    </formatterOptions>
                </configuration>
            </plugin>
             <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>dokka</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputDir>${project.basedir}/dokka/documentation/</outputDir>
                    <sourceDirectories>
                        <dir>${project.basedir}/WEB-INF/classes/com/cohort/util/</dir>
                    </sourceDirectories>
                    <suppressedFiles>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/Calendar2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/DoubleObject.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/File2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/HashDigest.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/Image2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/LRUCache.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/LICENSE.txt</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/MaskingThread.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/Math2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/MustBe.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/ResourceBundle2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/Script2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/SimpleException.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/String2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/String2Log.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/String2LogFactory.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/String2LogOutputStream.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/StringHolder.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/StringHolderComparator.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/StringHolderComparatorIgnoreCase.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/Test.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/Units2.java</file>
                        <file>${project.basedir}/WEB-INF/classes/com/cohort/util/XML.java</file>
                    </suppressedFiles>
                    <jdkVersion>17</jdkVersion>
                    <noStdlibLink>true</noStdlibLink> <!-- This is the Kotlin stdlib -->
                    <dokkaPlugins>
                        <plugin>
                            <groupId>org.jetbrains.dokka</groupId>
                             <artifactId>gfm-plugin</artifactId>
                            <version>2.0.0</version>
                        </plugin>
                    </dokkaPlugins>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
          <plugins>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <!-- https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils -->
                <plugin>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-utils</artifactId>
                    <version>4.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.14.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>

            <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/bom 
                 Parent for reading/writing to AWS S3. -->
            <dependency>
              <groupId>software.amazon.awssdk</groupId>
              <artifactId>bom</artifactId>
              <version>${awssdkVersion}</version> <!-- and same number several places below -->
              <type>pom</type>
              <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.12.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- This is needed due to indirect dependency in cdm-core -->
            <!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>3.25.6</version>
            </dependency>

            <!--
            The below are here to force updated dependencies of the hadoop libraries.
            The default selections have security vulnerabilities. Ideally we wouldn't be including
            hadoop at all, but parquet currently has dependencies on hadoop to read and write files.
            -->
            <!-- https://mvnrepository.com/artifact/org.apache.avro/avro -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>1.12.0</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/dnsjava/dnsjava -->
            <dependency>
                <groupId>dnsjava</groupId>
                <artifactId>dnsjava</artifactId>
                <version>3.6.3</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>1.80</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-configuration2 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>2.11.0</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt -->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>10.0.2</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api  -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.1.0</version>
            <scope>provided</scope>
            <!-- Tomcat8 needed this. Tomcat10 doesn't allow it.
            <configuration>
                <port>8081</port>
                <path>/erddap</path>
            </configuration -->
        </dependency> 

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jettyVersion}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty.ee10</groupId>
            <artifactId>jetty-ee10-servlet</artifactId>
            <version>${jettyVersion}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty.ee10</groupId>
            <artifactId>jetty-ee10-webapp</artifactId>
            <version>${jettyVersion}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.17.0</version>
            <scope>test</scope>
        </dependency>


        <!-- Kyle had this: 
             https://mvnrepository.com/artifact/org.apache.ant/ant 
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.10.9</version>
        </dependency>   -->

       <!-- https://mvnrepository.com/artifact/com.github.librepdf/openpdf -->
        <dependency>
            <groupId>com.github.librepdf</groupId>
            <artifactId>openpdf</artifactId>
            <version>2.0.3</version>
        </dependency>

        <!-- Kyle had this: 
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
            <version>1.6.3</version>
        </dependency-->

        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core 
             The Lucene search option uses this. -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${luceneVersion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-queryparser 
             The Lucene search option uses this. -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>${luceneVersion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.json/json 
             This is the JSON reader. -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20250107</version>
        </dependency>

        <!-- I have private copy of source code in with my code.
             2020-12-21 I tried to remove my copy and use this, but failed.
             https://mvnrepository.com/artifact/org.jdom/jdom 
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>2.0.2</version>
        </dependency-->

        <!-- Kyle had this: 
        <dependency>
            <groupId>org.apache.axis</groupId>
            <artifactId>axis</artifactId>
            <version>1.4</version>
        </dependency-->

        <!-- Kyle had this: 
        <dependency>
            <groupId>atg.taglib.json</groupId>
            <artifactId>json-taglib</artifactId>
            <version>0.4.1</version>
        </dependency-->

        <!-- https://mvnrepository.com/artifact/com.sun.mail/jakarta.mail 
             Used to send emails. -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!-- versions: https://mvnrepository.com/artifact/commons-codec/commons-codec
             dependency:analyze says it's needed if using netcdf modules
             but it's in netcdfAll.jar - ->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.15</version>
        </dependency> -->

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress 
             File2 and EDDTableFromNcFiles use this. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.27.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging
             dependency:analyze says it's needed if using netcdf modules
             but it's in netcdfAll.jar 
             Maven says 1.2's dependencies have 4 vulnerabilities, but all are old log4j vulnerabilities,
               so ERDDAP admins shouldn't use old log4j (or any log4j). - ->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency> -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>2.1.0-alpha1</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-core</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-misc</artifactId>
            <version>${netcdfJavaVersion}</version>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>udunits</artifactId>
            <version>${netcdfJavaVersion}</version>
        </dependency>

        <!-- The following are from netcdf and add support for various file types. -->
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>netcdf4</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>grib</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>bufr</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>opendap</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-radial</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-image</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-mcidas</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-s3</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>cdm-zarr</artifactId>
            <version>${netcdfJavaVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.sis.core/sis-metadata -->
        <dependency>
            <groupId>org.apache.sis.core</groupId>
            <artifactId>sis-metadata</artifactId>
            <version>1.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.sis.storage/sis-storage -->
        <dependency>
            <groupId>org.apache.sis.storage</groupId>
            <artifactId>sis-storage</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.5</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Version options: https://artifacts.unidata.ucar.edu/#browse/browse:unidata-all:edu%2Fwisc%2Fssec%2Fvisad  
             Marked as needed by dependency:analyze - ->
        <dependency>
            <groupId>edu.wisc.ssec</groupId>
            <artifactId>visad</artifactId>
            <version>2.0-20191209</version>
            <scope>runtime</scope>
        </dependency>


        <!- - https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
             It's in netcdf-all.jar  
             and something else gets slf4j-api-...jar - ->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.36</version>
            <scope>runtime</scope>
        </dependency>
        -->

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-jexl3 
             This is the expression parser/processor used by EDDTableFromFiles Derived Variables. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-jexl3</artifactId>
            <version>3.5.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql 
             Postgresql users use this. I include for their convenience. -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.5</version>
        </dependency>



        <!-- CASSANDRA 
             https://mvnrepository.com/artifact/com.datastax.cassandra/cassandra-driver-core 
             Cassandra uses this. 
             Be careful. Newer versions may cause trouble with current, older version of Cassandra (which ONC uses). -->
        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>3.11.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava 
             Cassandra driver uses this. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.4.8-jre</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.jpountz.lz4/lz4 
             Cassandra uses this. C* still refers to this older version from older domain. -->
        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-core 
             Cassandra uses this.  -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>4.2.30</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.netty/netty-all 
             Cassandra uses this. -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.2.1.Final</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-handler -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
            <version>4.2.1.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.xerial.snappy/snappy-java 
             Cassandra uses this. -->
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>1.1.10.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-jmx 
            2021-01-25 Tried: To deal with java.lang.NoClassDefFoundError: com/codahale/metrics/JmxReporter
            But now "metrics" option is always set to false.
            See EDDTableFromCassandra references to JmxReporter.
            See https://docs.datastax.com/en/developer/java-driver/3.5/manual/metrics/#metrics-4-compatibility            
            and need for Cluster.builder().withoutJMXReporting()
            which is probably a workable solution.           
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jmx</artifactId>
            <version>4.2.12</version>
        </dependency -->


        <!-- AWS
             https://mvnrepository.com/artifact/software.amazon.awssdk/s3 
             This is the core AWS SDK code. 
             See awssdk/bom in <dependencyManagement> section above. -->
        <dependency>
          <groupId>software.amazon.awssdk</groupId>
          <artifactId>s3</artifactId>
          <version>${awssdkVersion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/regions 
            This is the AWS code for Regions. -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>regions</artifactId>
            <version>${awssdkVersion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk/s3-transfer-manager
            This is the AWS code for TransferManager. -->      
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3-transfer-manager</artifactId>
            <version>${awssdkVersion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/software.amazon.awssdk.crt/aws-crt
            Maven compiling and dependency checking don't catch s3-transfer-manager's requirement for this.
            (Bob says: This modern fancy programming sucks. 
            Back in my day, if it compiled, all needed classes were present.) -->      
        <dependency>
            <groupId>software.amazon.awssdk.crt</groupId>
            <artifactId>aws-crt</artifactId>
            <version>0.38.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.auth/google-auth-library-oauth2-http -->
        <dependency>
            <groupId>com.google.auth</groupId>
            <artifactId>google-auth-library-oauth2-http</artifactId>
            <version>1.35.0</version>
        </dependency>

        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>prometheus-metrics-core</artifactId>
            <version>${prometheusVersion}</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>prometheus-metrics-model</artifactId>
            <version>${prometheusVersion}</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>prometheus-metrics-instrumentation-jvm</artifactId>
            <version>${prometheusVersion}</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>prometheus-metrics-exporter-servlet-jakarta</artifactId>
            <version>${prometheusVersion}</version>
        </dependency>
        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <version>4.8.179</version>
        </dependency>
         <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>3.4.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcprov-jdk15on</artifactId>
                </exclusion>
            </exclusions> 
        </dependency>
        <dependency>
            <groupId>org.apache.parquet</groupId>
            <artifactId>parquet-common</artifactId>
            <version>${parquetVersion}</version>
        </dependency>
         <dependency>
            <groupId>org.apache.parquet</groupId>
            <artifactId>parquet-encoding</artifactId>
            <version>${parquetVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.parquet</groupId>
            <artifactId>parquet-hadoop</artifactId>
            <version>${parquetVersion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.semver4j/semver4j -->
        <dependency>
            <groupId>org.semver4j</groupId>
            <artifactId>semver4j</artifactId>
            <version>5.7.0</version>
        </dependency>
    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${mavenTestPluginVersion}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${mavenTestPluginVersion}</version>
                <reportSets>
                    <reportSet>
                        <id>integration-tests</id>
                        <reports>
                        <report>failsafe-report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacocoMavenVersion}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
